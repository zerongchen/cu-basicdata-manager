function cellStyle(e, t, o) {
	var n = ["active", "success", "info", "warning", "danger"];
	return o % 2 === 0 && o / 2 < n.length ? {
		classes: n[o / 2]
	} : {}
}

function rowStyle(e, t) {
	var o = ["active", "success", "info", "warning", "danger"];
	return t % 2 === 0 && t / 2 < o.length ? {
		classes: o[t / 2]
	} : {}
}

function scoreSorter(e, t) {
	return e > t ? 1 : t > e ? -1 : 0
}

function nameFormatter(e) {
	return e + '<i class="icon wb-book" aria-hidden="true"></i> '
}

function starsFormatter(e) {
	return '<i class="icon wb-star" aria-hidden="true"></i> ' + e
}

function queryParams() {
	return {
		type: "owner",
		sort: "updated",
		direction: "desc",
		per_page: 100,
		page: 1
	}
}

function buildTable(e, t, o) {
	var n, l, s, a = [],
		c = [];
	for(n = 0; t > n; n++) a.push({
		field: "字段" + n,
		title: "单元你" + n
	});
	for(n = 0; o > n; n++) {
		for(s = {}, l = 0; t > l; l++) s["字段" + l] = "Row-" + n + "-" + l;
		c.push(s)
	}
	e.bootstrapTable("destroy").bootstrapTable({
		columns: a,
		data: c,
		iconSize: "outline",
		icons: {
			columns: "glyphicon-list"
		}
	})
}! function(e, t, o) {
	"use strict";
	! function() {
		var e = [{
			Tid: "1",
			First: "奔波儿灞",
			sex: "男",
			Score: "50"
		}, {
			Tid: "2",
			First: "灞波儿奔",
			sex: "男",
			Score: "94"
		}, {
			Tid: "3",
			First: "作家崔成浩",
			sex: "男",
			Score: "80"
		}, {
			Tid: "4",
			First: "韩寒",
			sex: "男",
			Score: "67"
		}, {
			Tid: "5",
			First: "郭敬明",
			sex: "男",
			Score: "100"
		}, {
			Tid: "6",
			First: "马云",
			sex: "男",
			Score: "77"
		}, {
			Tid: "7",
			First: "范爷",
			sex: "女",
			Score: "87"
		}];
		o("#exampleTableFromData").bootstrapTable({
			data: e,
			height: "250"
		})
	}(),
	function() {
		o("#exampleTableColumns").bootstrapTable({
			url: "js/demo/bootstrap_table_test.json",
			height: "400",
			iconSize: "outline",
			showColumns: !0,
			icons: {
				refresh: "glyphicon-repeat",
				toggle: "glyphicon-list-alt",
				columns: "glyphicon-list"
			}
		})
	}(), buildTable(o("#exampleTableLargeColumns"), 50, 50),
		//基础数据智能管理系统-模块框架
		function() {
			o("#exampleTableModal").bootstrapTable({
				url: "js/demo/bootstrap_table_modal.json",
				showColumns: !0,
				toolbar: "#exampleTableModaltoolbar",
				sortable: true, //是否启用排序
				sortOrder: "asc", //排序方式
				pagination: true, //是否显示分页
				pageNumber: 1, //初始化加载第一页，默认第一页
				pageSize: 10, //每页的记录行数（*）
				pageList: [10, 25, 50, 100], //可供选择的每页的行数（*）
				clickToSelect: true, //是否启用点击选中行
			});
		}(),
		//机房主体信息预录入管理-机房主体信息管理
		function() {
			o("#exampleTableToolbar1").bootstrapTable({
				url: "js/demo/bootstrap_table_test1.json",
				//				search: !0,
				//				showRefresh: !0,
				//				showToggle: !0,
				showColumns: !0,
				toolbar: "#exampleToolbar1",
				iconSize: "outline",
				icons: {
					refresh: "glyphicon-repeat",
					toggle: "glyphicon-list-alt",
					columns: "glyphicon-list",
				},
				sortable: true, //是否启用排序
				sortOrder: "asc", //排序方式
				pagination: true, //是否显示分页
				pageNumber: 1, //初始化加载第一页，默认第一页
				pageSize: 10, //每页的记录行数（*）
				pageList: [10, 25, 50, 100], //可供选择的每页的行数（*）
				clickToSelect: true, //是否启用点击选中行
				onLoadSuccess: function() {
					//加载成功后，批量删除btn的点击 || 表格-操作-预审的点击事件
					$(".demo4").click(function() {
						swal({
							title: "确定要删除这条信息吗",
							text: "删除后将无法恢复，请谨慎操作！",
							type: "warning",
							showCancelButton: true,
							confirmButtonColor: "#DD6B55",
							confirmButtonText: "是的，我要删除！",
							cancelButtonText: "让我再考虑一下…",
							closeOnConfirm: false,
							closeOnCancel: false
						}, function(isConfirm) {
							if(isConfirm) {
								//表格中的删除操作
								var result = $('#exampleTableToolbar1').bootstrapTable('getSelections'); //获取表格的所有内容行  
								var ids = [];
								for(var i = 0; i < result.length; i++) {
									var item = result[i];
									$('#exampleTableToolbar1>tbody>tr').remove('.selected')
									ids.push(item.name);
								}
								$("#exampleTableToolbar1>tbody>.hidetr").remove();
								swal("删除成功！", "已经永久删除了这条记录。", "success")
							} else {
								swal("已取消", "取消了删除操作！", "error")
							}
						})
					});
					//表格加载成功后，预审的点击事件
					$(".demo2").click(function() {
						swal({
							title: "预审通过",
							text: "请登陆IDC/ISP信息安全管理系统进行机房数据上报！",
							type: "success",
							showCancelButton: true,
						})
					});
				}
			});
		}(),
		//机房主体信息预录入管理-机房主体信息管理-详情
		function() {
			o("#exampleTableToolbar2").bootstrapTable({
				url: "js/demo/bootstrap_table_test2.json",
				//				search: !0,
				//				showRefresh: !0,
				//				showToggle: !0,
				//				showColumns: !0,
				//				toolbar: "#exampleToolbar2",
				iconSize: "outline",
				icons: {
					refresh: "glyphicon-repeat",
					toggle: "glyphicon-list-alt",
					columns: "glyphicon-list",
				},
				sortable: true, //是否启用排序
				sortOrder: "asc", //排序方式
				pagination: true, //是否显示分页
				pageNumber: 1, //初始化加载第一页，默认第一页
				pageSize: 10, //每页的记录行数（*）
				pageList: [10, 25, 50, 100], //可供选择的每页的行数（*）
				clickToSelect: true //是否启用点击选中行
			});
		}(),
		//用户信息预录入管理-用户主体信息管理
		function() {
			o("#exampleTableToolbar3").bootstrapTable({
				url: "js/demo/bootstrap_table_test3.json",
				//				search: !0,
				//				showRefresh: !0,
				//				showToggle: !0,
				//				showColumns: !0,
				toolbar: "#exampleToolbar3",
				iconSize: "outline",
				icons: {
					refresh: "glyphicon-repeat",
					toggle: "glyphicon-list-alt",
					columns: "glyphicon-list",
				},
				sortable: true, //是否启用排序
				sortOrder: "asc", //排序方式
				pagination: true, //是否显示分页
				pageNumber: 1, //初始化加载第一页，默认第一页
				pageSize: 10, //每页的记录行数（*）
				pageList: [10, 25, 50, 100], //可供选择的每页的行数（*）
				clickToSelect: true //是否启用点击选中行
			});
		}(),
		//用户信息预录入管理-用户主体信息管理-详情-网络资源信息-服务IP地址
		function() {
			o("#exampleTableToolbar4").bootstrapTable({
				url: "js/demo/bootstrap_table_test4.json",
				//				search: !0,
				//				showRefresh: !0,
				//				showToggle: !0,
				//				showColumns: !0,
				//				iconSize: "outline",
				//				icons: {
				//					refresh: "glyphicon-repeat",
				//					toggle: "glyphicon-list-alt",
				//					columns: "glyphicon-list",
				//				},
				//            toolbar: "#exampleTableEventsToolbar",
				sortable: true, //是否启用排序
				sortOrder: "asc", //排序方式
				pagination: true, //是否显示分页
				pageNumber: 1, //初始化加载第一页，默认第一页
				pageSize: 5, //每页的记录行数（*）
				pageList: [5, 10], //可供选择的每页的行数（*）
				//				clickToSelect: true //是否启用点击选中行
			});
		}(),
		//用户信息预录入管理-用户网络资源管理
		function() {
			o("#exampleTableToolbar5").bootstrapTable({
				url: "js/demo/bootstrap_table_test5.json",
				toolbar: "#exampleToolbar5",
				sortable: true, //是否启用排序
				sortOrder: "asc", //排序方式
				pagination: true, //是否显示分页
				pageNumber: 1, //初始化加载第一页，默认第一页
				pageSize: 5, //每页的记录行数（*）
				pageList: [5, 10], //可供选择的每页的行数（*）
				clickToSelect: true, //是否启用点击选中行
				onLoadSuccess: function() {
					//加载成功后，批量删除btn的点击 || 表格-操作-预审的点击事件
					$(".demo4").click(function() {
						swal({
							title: "确定要删除这条信息吗",
							text: "删除后将无法恢复，请谨慎操作！",
							type: "warning",
							showCancelButton: true,
							confirmButtonColor: "#DD6B55",
							confirmButtonText: "是的，我要删除！",
							cancelButtonText: "让我再考虑一下…",
							closeOnConfirm: false,
							closeOnCancel: false
						}, function(isConfirm) {
							if(isConfirm) {
								//表格中的删除操作
								var result = $('#exampleTableToolbar5').bootstrapTable('getSelections'); //获取表格的所有内容行  
								var ids = [];
								for(var i = 0; i < result.length; i++) {
									var item = result[i];
									$('#exampleTableToolbar5>tbody>tr').remove('.selected')
									ids.push(item.name);
								}
								$("#exampleTableToolbar5>tbody>.hidetr").remove();
								swal("删除成功！", "已经永久删除了这条记录。", "success")
							} else {
								swal("已取消", "取消了删除操作！", "error")
							}
						})
					});
					//表格加载成功后，预审的点击事件
					$(".demo2").click(function() {
						swal({
							title: "预审通过",
							text: "请登陆IDC/ISP信息安全管理系统进行机房数据上报！",
							type: "success",
							showCancelButton: true,
						})
					});
				}
			});
		}(),
		//用户信息预录入管理-用户网络资源管理-新增
		function() {
			o("#exampleTableToolbar6").bootstrapTable({
				url: "js/demo/bootstrap_table_test6.json",
				sortable: true, //是否启用排序
				sortOrder: "asc", //排序方式
				//				pagination: true, //是否显示分页
				//				pageNumber: 1, //初始化加载第一页，默认第一页
				//				pageSize: 5, //每页的记录行数（*）
				//				pageList: [5, 10], //可供选择的每页的行数（*）
				//				clickToSelect: true //是否启用点击选中行
			});
		}(),
		function() {
			o("#exampleTableEvents").bootstrapTable({
				url: "js/demo/bootstrap_table_test.json",
				search: !0,
				pagination: !0,
				showRefresh: !0,
				showToggle: !0,
				showColumns: !0,
				iconSize: "outline",
				toolbar: "#exampleTableEventsToolbar",
				icons: {
					refresh: "glyphicon-repeat",
					toggle: "glyphicon-list-alt",
					columns: "glyphicon-list"
				}
			});
			o("#tabletest").bootstrapTable({
				url: "js/demo/bootstrap_table_test.json",
				showColumns: !0,
				iconSize: "outline",
				toolbar: "#tabletestToolbar",
				icons: {
					refresh: "glyphicon-repeat",
					toggle: "glyphicon-list-alt",
					columns: "glyphicon-list"
				}
			});
			var e = o("#examplebtTableEventsResult");
			o("#exampleTableEvents").on("all.bs.table", function(e, t, o) {
				console.log("Event:", t, ", data:", o)
			}).on("click-row.bs.table", function() {
				e.text("Event: click-row.bs.table")
			}).on("dbl-click-row.bs.table", function() {
				e.text("Event: dbl-click-row.bs.table")
			}).on("sort.bs.table", function() {
				e.text("Event: sort.bs.table")
			}).on("check.bs.table", function() {
				e.text("Event: check.bs.table")
			}).on("uncheck.bs.table", function() {
				e.text("Event: uncheck.bs.table")
			}).on("check-all.bs.table", function() {
				e.text("Event: check-all.bs.table")
			}).on("uncheck-all.bs.table", function() {
				e.text("Event: uncheck-all.bs.table")
			}).on("load-success.bs.table", function() {
				e.text("Event: load-success.bs.table")
			}).on("load-error.bs.table", function() {
				e.text("Event: load-error.bs.table")
			}).on("column-switch.bs.table", function() {
				e.text("Event: column-switch.bs.table")
			}).on("page-change.bs.table", function() {
				e.text("Event: page-change.bs.table")
			}).on("search.bs.table", function() {
				e.text("Event: search.bs.table")
			})
		}()
}(document, window, jQuery);